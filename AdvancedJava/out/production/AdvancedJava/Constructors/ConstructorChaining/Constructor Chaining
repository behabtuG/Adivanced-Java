Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

One of the main use of constructor chaining is to avoid duplicate codes while having multiple constructor (by means of constructor
 overloading) and make code more readable.

Prerequisite - Constructors in Java

Constructor chaining can be done in two ways:

    . Within same class: It can be done using this() keyword for constructors in the same class
    . From base class: by using super() keyword to call the constructor from the base class.

Constructor chaining occurs through inheritance. A sub-class constructor’s task is to call super class’s constructor first. This ensures that
 the creation of sub class’s object starts with the initialization of the data members of the superclass. There could be any number of classes
  in the inheritance chain. Every constructor calls up the chain till the class at the top is reached.

 Why do we need constructor chaining?

 This process is used when we want to perform multiple tasks in a single constructor rather than creating a code for each task in a single
 constructor we create a separate constructor for each task and make their chain which makes the program more readable.

 Constructor Chaining within the same class using this() keyword:

   Rules of constructor chaining :

    1. The this() expression should always be the first line of the constructor.
    2. There should be at-least be one constructor without the this() keyword (constructor 3 in above example).
    3. Constructor chaining can be achieved in any order.

    What happens if we change the order of constructors?
    Nothing, Constructor chaining can be achieved in any order

 Constructor Chaining to other class using super() keyword :

   Note : Similar to constructor chaining in same class, super() should be the first line of the constructor as super class’s constructor are
   invoked before the sub class’s constructor.
   Alternative method : using Init block :
   When we want certain common resources to be executed with every constructor we can put the code in the init block. Init block is always
    executed before any constructor, whenever a constructor is used for creating a new object.
  Example 1:

  NOTE: If there are more than one blocks, they are executed in the order in which they are defined within the same class. See the ex.
  Example :