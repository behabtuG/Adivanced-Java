ArrayList is a part of collection framework and is present in java.util package. It provides us dynamic arrays in Java. Though, it may be slower than standard arrays but can be helpful in programs where lots of manipulation in the array is needed.

    . ArrayList inherits AbstractList class and implements List interface.
    . ArrayList is initialized by a size, however the size can increase if collection grows or shrink if objects are removed from the collection.
    . Java ArrayList allows us to randomly access the list.
    . ArrayList can not be used for primitive types, like int, char, etc. We need a wrapper class for such cases (see this for details).
    . ArrayList in Java can be seen as similar to vector in C++.

 1. Initialization with add()

    Syntax:

   ArrayList<Type> str = new ArrayList<Type>();
          str.add("Geeks");
          str.add("for");
          str.add("Geeks");

 2. Initialization using asList()

    Syntax:

    ArrayList<Type> obj = new ArrayList<Type>(
       Arrays.asList(Obj A, Obj B, Obj C, ....so on));

 3. Initialization using List.of() method
    Syntax:

    List<Type> obj = new ArrayList<>(
            List.of(Obj A, Obj B, Obj C, ....so on));

 3. Initialization using another Collection

     Syntax:

      List gfg = new ArrayList(collection);

