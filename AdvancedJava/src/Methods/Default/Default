Before Java 8, interfaces could have only abstract methods. The implementation of these methods has to be provided in a separate
class.So, if a new method is to be added in an interface, then its implementation code has to be provided in the class implementing
the same interface. To overcome this issue, Java 8 has introduced the concept of default methods which allow the interfaces to have
methods with implementation without affecting the classes that implement the interface.

The default methods were introduced to provide backward compatibility so that existing interfaces can use the lambda expressions
without implementing the methods in the implementation class. Default methods are also known as defender methods or virtual extension
 methods.

  Static Methods:
    The interfaces can have static methods as well which is similar to static method of classes.

  Default Methods and Multiple Inheritance
    In case both the implemented interfaces contain default methods with same method signature, the implementing class should
    explicitly specify which default method is to be used or it should override the default method.

  Important Points:

    1. Interfaces can have default methods with implementation in Java 8 on later.
    2. Interfaces can have static methods as well, similar to static methods in classes.
    3. Default methods were introduced to provide backward compatibility for old interfaces so that they can have new methods
       without affecting existing code.